<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[正则表达式中的^]]></title>
    <url>%2F2019%2F06%2F20%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%AD%E7%9A%84%2F</url>
    <content type="text"><![CDATA[^是正则表达式中一个很重要的符号，但是它在正则表达式中确有以下两种不同的意义：1. 表示匹配一段文本开头的位置。2. 表示否定字符的意思。接下来根据具体的案例看看^在这两种使用情景下有哪些不同？ 限定开头例如这个正则表达式这个正则表达式就是用来匹配以小写的「a」开头的字符串， 如「alibaba」，但不能匹配「baidu」，「^」代表的是字符串第一个字母前面那个用肉眼看不见的位置。 12345 public static void main(String[] args) &#123; String reg1 = &quot;^a.*&quot;; System.out.println(Pattern.matches(reg1, &quot;alibaba&quot;)); System.out.println(Pattern.matches(reg1, &quot;balibaba&quot;));&#125; 上面代码的输出是 true 和 false，符合预期。 否定字符以下面这个正则表达式为例，一般情况下我们会使用两种思路去理解。 不匹配「a」和「b」开头的字符串 匹配除「a」和「b」以外的所有字符串开头的字符串通过这两种思路去理解这个正则表达式， 最终的答案都是一样的，也是正确的。 我们思考问题的逻辑思路更倾向于第一种理解方式。然而对于整套正则表达式体系理念来说， 第一种理解方式是错误的。 在正则表达式理念中， 只有去「匹配」些什么， 从来没有「不匹配」这一说法，这一点是必须要区分清楚的。当我们处理正则问题时， 在梳理逻辑时将「匹配」与「不匹配」混杂在一起，势必会增加处理问题的复杂度， 对于简单的问题受到的影响也许不是很明显 ， 就像上面举的例子那样， 因为还在我们智力的承受范围内，但碰到复杂的问题时， 就会像掉进沼泽一样， 怎么爬也爬不出来， 最终被困死在泥潭中。但是，假如只是以单纯的「匹配」去理解，就能简化处理问题的难度，降低复杂度，2肯定比1复杂。 因此，正则表达式最重要的核心理念就是「匹配」。另外，在程序设计中用到的替换、切割、查找等操作， 都是程序类库封装的功能， 和正则表达式本身半毛钱关系也没有。 理解「匹配」也就意味着对学习正则表达式的入门。12345 public static void main(String[] args) &#123; String reg2 = &quot;[^a].*&quot;; System.out.println(Pattern.matches(reg2, &quot;alibaba&quot;)); System.out.println(Pattern.matches(reg2, &quot;balibaba&quot;));&#125; 以上代码输出的结果是 false 和 true,符合预期。借鉴一个记忆的方法：乌龟把头[^]缩进里面，变为无（非)头乌龟乌龟把头 ^ 伸出来，变为(首）领]]></content>
      <categories>
        <category>Java基础</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试第一篇博客]]></title>
    <url>%2F2019%2F04%2F05%2Ftest-my-blog%2F</url>
    <content type="text"><![CDATA[本篇博客与4月5日创建，又于6月19日修改。博客主题是next，参考https://dandyxu.me/想加入鼠标悬停在页面上，会有蒲公英式的图形围绕在鼠标四周的JS动画，但是不知道是什么，也不知道怎么弄………]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
